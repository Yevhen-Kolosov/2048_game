{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/changeCellClass.js","src/scripts/addNewNumber.js","src/scripts/handleAction.js","src/scripts/isTurnPossible.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $987fee629f7e0513$exports = {};\n\"use strict\";\nconst $987fee629f7e0513$var$changeCellClass = (cell)=>{\n    if (cell.textContent) {\n        if (cell.classList.length > 1) cell.classList.replace(cell.classList[1], `field-cell--${cell.textContent}`);\n        else cell.classList.add(`field-cell--${cell.textContent}`);\n    } else cell.classList.remove(cell.classList[1]);\n};\n$987fee629f7e0513$exports = {\n    changeCellClass: $987fee629f7e0513$var$changeCellClass\n};\n\n\nvar $5a3fc3e2587399e4$require$changeCellClass = $987fee629f7e0513$exports.changeCellClass;\nvar $bf0bcf8dedb05ab7$exports = {};\n\"use strict\";\n\nvar $bf0bcf8dedb05ab7$require$changeCellClass = $987fee629f7e0513$exports.changeCellClass;\nconst $bf0bcf8dedb05ab7$var$addNewNumber = (cells)=>{\n    const emptyCells = cells.filter((cell)=>!cell.textContent);\n    const cellValue = Math.random() < 0.1 ? \"4\" : \"2\";\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    emptyCells[randomIndex].textContent = cellValue;\n    $bf0bcf8dedb05ab7$require$changeCellClass(emptyCells[randomIndex]);\n};\n$bf0bcf8dedb05ab7$exports = {\n    addNewNumber: $bf0bcf8dedb05ab7$var$addNewNumber\n};\n\n\nvar $5a3fc3e2587399e4$require$addNewNumber = $bf0bcf8dedb05ab7$exports.addNewNumber;\nvar $049d528e9134876a$exports = {};\n\"use strict\";\nconst $049d528e9134876a$var$handleAction = (actionKey, field, gameScore)=>{\n    let addedScore = 0;\n    switch(actionKey){\n        case \"ArrowUp\":\n            for(let row = 0; row < field.length; row++)for(let col = 0; col < field[row].length; col++){\n                const currentCell = field[row][col];\n                for(let i = row + 1; i < field.length; i++){\n                    const comparedCell = field[i][col];\n                    if (comparedCell.textContent) {\n                        if (!currentCell.textContent) {\n                            currentCell.textContent = comparedCell.textContent;\n                            comparedCell.textContent = \"\";\n                        } else if (currentCell.textContent === comparedCell.textContent) {\n                            addedScore += +currentCell.textContent * 2;\n                            currentCell.textContent = `${+currentCell.textContent + +comparedCell.textContent}`;\n                            comparedCell.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowDown\":\n            for(let row = field.length - 1; row >= 0; row--)for(let col = 0; col < field[row].length; col++){\n                const currentCell = field[row][col];\n                for(let i = row - 1; i >= 0; i--){\n                    const comparedCell = field[i][col];\n                    if (comparedCell.textContent) {\n                        if (!currentCell.textContent) {\n                            currentCell.textContent = comparedCell.textContent;\n                            comparedCell.textContent = \"\";\n                        } else if (currentCell.textContent === comparedCell.textContent) {\n                            addedScore += +currentCell.textContent * 2;\n                            currentCell.textContent = `${+currentCell.textContent + +comparedCell.textContent}`;\n                            comparedCell.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowLeft\":\n            for(let col = 0; col < field.length; col++)for(let row = 0; row < field.length; row++){\n                const currentCell = field[row][col];\n                for(let i = col + 1; i < field.length; i++){\n                    const comparedCell = field[row][i];\n                    if (comparedCell.textContent) {\n                        if (!currentCell.textContent) {\n                            currentCell.textContent = comparedCell.textContent;\n                            comparedCell.textContent = \"\";\n                        } else if (currentCell.textContent === comparedCell.textContent) {\n                            addedScore += +currentCell.textContent * 2;\n                            currentCell.textContent = `${+currentCell.textContent + +comparedCell.textContent}`;\n                            comparedCell.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowRight\":\n            for(let col = field.length - 1; col >= 0; col--)for(let row = 0; row < field.length; row++){\n                const currentCell = field[row][col];\n                for(let i = col - 1; i >= 0; i--){\n                    const comparedCell = field[row][i];\n                    if (comparedCell.textContent) {\n                        if (!currentCell.textContent) {\n                            currentCell.textContent = comparedCell.textContent;\n                            comparedCell.textContent = \"\";\n                        } else if (currentCell.textContent === comparedCell.textContent) {\n                            addedScore += +currentCell.textContent * 2;\n                            currentCell.textContent = `${+currentCell.textContent + +comparedCell.textContent}`;\n                            comparedCell.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        default:\n            break;\n    }\n    gameScore.textContent = `${+gameScore.textContent + addedScore}`;\n};\n$049d528e9134876a$exports = {\n    handleAction: $049d528e9134876a$var$handleAction\n};\n\n\nvar $5a3fc3e2587399e4$require$handleAction = $049d528e9134876a$exports.handleAction;\nvar $6e7329e35756dd8e$exports = {};\n\"use strict\";\nconst $6e7329e35756dd8e$var$isTurnPossible = (field)=>{\n    for(let row = 0; row < field.length; row++)for(let col = 0; col < field.length; col++){\n        const currentCell = field[row][col];\n        if (currentCell.textContent === \"\") return true;\n    }\n    for(let row = 0; row < field.length; row++)for(let col = 0; col < field.length; col++){\n        const currentCellValue = field[row][col].textContent;\n        const comparedCell1Value = field[row + 1] ? field[row + 1][col].textContent : null;\n        const comparedCell2Value = field[row][col + 1] ? field[row][col + 1].textContent : null;\n        if (currentCellValue === comparedCell1Value || currentCellValue === comparedCell2Value) return true;\n    }\n    return false;\n};\n$6e7329e35756dd8e$exports = {\n    isTurnPossible: $6e7329e35756dd8e$var$isTurnPossible\n};\n\n\nvar $5a3fc3e2587399e4$require$isTurnPossible = $6e7329e35756dd8e$exports.isTurnPossible;\nconst $5a3fc3e2587399e4$var$CONTROLS = [\n    \"ArrowUp\",\n    \"ArrowDown\",\n    \"ArrowLeft\",\n    \"ArrowRight\"\n];\nconst $5a3fc3e2587399e4$var$mainButton = document.querySelector(\".button-main\");\nconst $5a3fc3e2587399e4$var$gameScore = document.querySelector(\".game-score\");\nconst $5a3fc3e2587399e4$var$fieldCells = document.querySelectorAll(\".field-cell\");\nconst $5a3fc3e2587399e4$var$cells = Array.from($5a3fc3e2587399e4$var$fieldCells);\nconst $5a3fc3e2587399e4$var$field = [\n    $5a3fc3e2587399e4$var$cells.slice(0, 4),\n    $5a3fc3e2587399e4$var$cells.slice(4, 8),\n    $5a3fc3e2587399e4$var$cells.slice(8, 12),\n    $5a3fc3e2587399e4$var$cells.slice(12, 16)\n];\nconst $5a3fc3e2587399e4$var$messages = {\n    start: document.querySelector(\".message-start\"),\n    win: document.querySelector(\".message-win\"),\n    lose: document.querySelector(\".message-lose\")\n};\nlet $5a3fc3e2587399e4$var$isFirstMove = true;\nconst $5a3fc3e2587399e4$var$game2048 = (action)=>{\n    if ($5a3fc3e2587399e4$var$CONTROLS.includes(action.key)) {\n        const previousTurn = $5a3fc3e2587399e4$var$cells.map((cell)=>cell.textContent);\n        $5a3fc3e2587399e4$require$handleAction(action.key, $5a3fc3e2587399e4$var$field, $5a3fc3e2587399e4$var$gameScore);\n        $5a3fc3e2587399e4$var$fieldCells.forEach((fieldCell)=>{\n            $5a3fc3e2587399e4$require$changeCellClass(fieldCell);\n        });\n        const currentTurn = $5a3fc3e2587399e4$var$cells.map((cell)=>cell.textContent);\n        const isFieldChanged = currentTurn.toString() !== previousTurn.toString();\n        if (isFieldChanged) {\n            $5a3fc3e2587399e4$require$addNewNumber($5a3fc3e2587399e4$var$cells);\n            if ($5a3fc3e2587399e4$var$isFirstMove) {\n                $5a3fc3e2587399e4$var$mainButton.classList.replace(\"start\", \"restart\");\n                $5a3fc3e2587399e4$var$mainButton.textContent = \"Restart\";\n                $5a3fc3e2587399e4$var$isFirstMove = false;\n            }\n        }\n        if (currentTurn.some((cellValue)=>cellValue === \"2048\")) {\n            $5a3fc3e2587399e4$var$messages.win.classList.remove(\"hidden\");\n            document.removeEventListener(\"keydown\", $5a3fc3e2587399e4$var$game2048);\n        } else if (!isFieldChanged) {\n            if (!$5a3fc3e2587399e4$require$isTurnPossible($5a3fc3e2587399e4$var$field)) {\n                $5a3fc3e2587399e4$var$messages.lose.classList.remove(\"hidden\");\n                document.removeEventListener(\"keydown\", $5a3fc3e2587399e4$var$game2048);\n            }\n        }\n    }\n};\n$5a3fc3e2587399e4$var$mainButton.addEventListener(\"click\", ()=>{\n    document.removeEventListener(\"keydown\", $5a3fc3e2587399e4$var$game2048);\n    $5a3fc3e2587399e4$var$mainButton.classList.replace(\"restart\", \"start\");\n    $5a3fc3e2587399e4$var$mainButton.textContent = \"Start\";\n    $5a3fc3e2587399e4$var$isFirstMove = true;\n    $5a3fc3e2587399e4$var$gameScore.textContent = \"0\";\n    $5a3fc3e2587399e4$var$fieldCells.forEach((fieldCell)=>{\n        fieldCell.textContent = \"\";\n        $5a3fc3e2587399e4$require$changeCellClass(fieldCell);\n    });\n    $5a3fc3e2587399e4$require$addNewNumber($5a3fc3e2587399e4$var$cells);\n    $5a3fc3e2587399e4$require$addNewNumber($5a3fc3e2587399e4$var$cells);\n    for(const gameEvent in $5a3fc3e2587399e4$var$messages)if (!$5a3fc3e2587399e4$var$messages[gameEvent].classList.contains(\"hidden\")) $5a3fc3e2587399e4$var$messages[gameEvent].classList.add(\"hidden\");\n    document.addEventListener(\"keydown\", $5a3fc3e2587399e4$var$game2048);\n});\n\n})();\n//# sourceMappingURL=index.49be8445.js.map\n","'use strict';\n\nconst { changeCellClass } = require('./changeCellClass');\nconst { addNewNumber } = require('./addNewNumber');\nconst { handleAction } = require('./handleAction');\nconst { isTurnPossible } = require('./isTurnPossible');\n\nconst CONTROLS = [\n  'ArrowUp',\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n];\n\nconst mainButton = document.querySelector('.button-main');\n\nconst gameScore = document.querySelector('.game-score');\n\nconst fieldCells = document.querySelectorAll('.field-cell');\nconst cells = Array.from(fieldCells);\n\nconst field = [\n  cells.slice(0, 4),\n  cells.slice(4, 8),\n  cells.slice(8, 12),\n  cells.slice(12, 16),\n];\n\nconst messages = {\n  start: document.querySelector('.message-start'),\n  win: document.querySelector('.message-win'),\n  lose: document.querySelector('.message-lose'),\n};\n\nlet isFirstMove = true;\n\nconst game2048 = (action) => {\n  if (CONTROLS.includes(action.key)) {\n    const previousTurn = cells.map(cell => cell.textContent);\n\n    handleAction(action.key, field, gameScore);\n\n    fieldCells.forEach((fieldCell) => {\n      changeCellClass(fieldCell);\n    });\n\n    const currentTurn = cells.map(cell => cell.textContent);\n\n    const isFieldChanged = currentTurn.toString() !== previousTurn.toString();\n\n    if (isFieldChanged) {\n      addNewNumber(cells);\n\n      if (isFirstMove) {\n        mainButton.classList.replace('start', 'restart');\n        mainButton.textContent = 'Restart';\n\n        isFirstMove = false;\n      }\n    }\n\n    if (currentTurn.some(cellValue => cellValue === '2048')) {\n      messages.win.classList.remove('hidden');\n      document.removeEventListener('keydown', game2048);\n    } else if (!isFieldChanged) {\n      if (!isTurnPossible(field)) {\n        messages.lose.classList.remove('hidden');\n        document.removeEventListener('keydown', game2048);\n      }\n    }\n  }\n};\n\nmainButton.addEventListener('click', () => {\n  document.removeEventListener('keydown', game2048);\n\n  mainButton.classList.replace('restart', 'start');\n  mainButton.textContent = 'Start';\n\n  isFirstMove = true;\n\n  gameScore.textContent = '0';\n\n  fieldCells.forEach((fieldCell) => {\n    fieldCell.textContent = '';\n    changeCellClass(fieldCell);\n  });\n\n  addNewNumber(cells);\n  addNewNumber(cells);\n\n  for (const gameEvent in messages) {\n    if (!messages[gameEvent].classList.contains('hidden')) {\n      messages[gameEvent].classList.add('hidden');\n    }\n  }\n\n  document.addEventListener('keydown', game2048);\n});\n","'use strict';\n\nconst changeCellClass = (cell) => {\n  if (cell.textContent) {\n    if (cell.classList.length > 1) {\n      cell.classList.replace(\n        cell.classList[1],\n        `field-cell--${cell.textContent}`,\n      );\n    } else {\n      cell.classList.add(`field-cell--${cell.textContent}`);\n    }\n  } else {\n    cell.classList.remove(cell.classList[1]);\n  }\n};\n\nmodule.exports = { changeCellClass };\n","'use strict';\n\nconst { changeCellClass } = require('./changeCellClass');\n\nconst addNewNumber = (cells) => {\n  const emptyCells = cells.filter(cell => !cell.textContent);\n  const cellValue = (Math.random() < 0.1) ? '4' : '2';\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n  emptyCells[randomIndex].textContent = cellValue;\n  changeCellClass(emptyCells[randomIndex]);\n};\n\nmodule.exports = { addNewNumber };\n","'use strict';\n\nconst handleAction = (actionKey, field, gameScore) => {\n  let addedScore = 0;\n\n  switch (actionKey) {\n    case 'ArrowUp':\n      for (let row = 0; row < field.length; row++) {\n        for (let col = 0; col < field[row].length; col++) {\n          const currentCell = field[row][col];\n\n          for (let i = row + 1; i < field.length; i++) {\n            const comparedCell = field[i][col];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowDown':\n      for (let row = field.length - 1; row >= 0; row--) {\n        for (let col = 0; col < field[row].length; col++) {\n          const currentCell = field[row][col];\n\n          for (let i = row - 1; i >= 0; i--) {\n            const comparedCell = field[i][col];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowLeft':\n      for (let col = 0; col < field.length; col++) {\n        for (let row = 0; row < field.length; row++) {\n          const currentCell = field[row][col];\n\n          for (let i = col + 1; i < field.length; i++) {\n            const comparedCell = field[row][i];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowRight':\n      for (let col = field.length - 1; col >= 0; col--) {\n        for (let row = 0; row < field.length; row++) {\n          const currentCell = field[row][col];\n\n          for (let i = col - 1; i >= 0; i--) {\n            const comparedCell = field[row][i];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  gameScore.textContent = `${((+gameScore.textContent) + addedScore)}`;\n};\n\nmodule.exports = { handleAction };\n","'use strict';\n\nconst isTurnPossible = (field) => {\n  for (let row = 0; row < field.length; row++) {\n    for (let col = 0; col < field.length; col++) {\n      const currentCell = field[row][col];\n\n      if (currentCell.textContent === '') {\n        return true;\n      }\n    }\n  }\n\n  for (let row = 0; row < field.length; row++) {\n    for (let col = 0; col < field.length; col++) {\n      const currentCellValue = field[row][col].textContent;\n      const comparedCell1Value = field[row + 1]\n        ? field[row + 1][col].textContent\n        : null;\n      const comparedCell2Value = field[row][col + 1]\n        ? field[row][col + 1].textContent\n        : null;\n\n      if (currentCellValue === comparedCell1Value\n      || currentCellValue === comparedCell2Value) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = { isTurnPossible };\n"],"names":["$987fee629f7e0513$exports","$5a3fc3e2587399e4$require$changeCellClass","changeCellClass","cell","textContent","classList","length","replace","add","remove","$bf0bcf8dedb05ab7$require$changeCellClass","$5a3fc3e2587399e4$require$addNewNumber","cells","emptyCells","filter","randomIndex","Math","floor","random","$5a3fc3e2587399e4$require$handleAction","actionKey","field","gameScore","addedScore","row","col","currentCell","i","comparedCell","$5a3fc3e2587399e4$require$isTurnPossible","currentCellValue","comparedCell1Value","comparedCell2Value","$5a3fc3e2587399e4$var$CONTROLS","$5a3fc3e2587399e4$var$mainButton","document","querySelector","$5a3fc3e2587399e4$var$gameScore","$5a3fc3e2587399e4$var$fieldCells","querySelectorAll","$5a3fc3e2587399e4$var$cells","Array","from","$5a3fc3e2587399e4$var$field","slice","$5a3fc3e2587399e4$var$messages","start","win","lose","$5a3fc3e2587399e4$var$isFirstMove","$5a3fc3e2587399e4$var$game2048","action","includes","key","previousTurn","map","forEach","fieldCell","currentTurn","isFieldChanged","toString","some","cellValue","removeEventListener","addEventListener","gameEvent","contains"],"version":3,"file":"index.49be8445.js.map"}